knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
print_DTMC(P,labels)
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
P <- matrix(
c(
0, 1, 0, 0,
0, 0.01, 0.01, 0.98,
1, 0, 0, 0,
0, 0, 0, 1
),
nrow=4, byrow=TRUE)
labels <- c("s0:{}", "s1:{try}", "s2:{fail}", "s3:{succ}")
print_DTMC <- function(P, labels){
g <- graph_from_adjacency_matrix(P, weighted = TRUE) %>%
as_tbl_graph()
g$labels <- labels
ggraph(g) +
geom_node_point(aes(color=as.factor(labels)), size = 10) +
geom_edge_loop(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
start_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_edge_link(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
start_cap = circle(10, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_node_label(aes(label = labels), repel = T) +
theme(legend.position = "none")
}
print_DTMC(P,labels)
print_DTMC(P,labels)
install.packages("Cairo")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
P <- matrix(
c(
0, 1, 0, 0,
0, 0.01, 0.01, 0.98,
1, 0, 0, 0,
0, 0, 0, 1
),
nrow=4, byrow=TRUE)
labels <- c("s0:{}", "s1:{try}", "s2:{fail}", "s3:{succ}")
print_DTMC <- function(P, labels){
g <- graph_from_adjacency_matrix(P, weighted = TRUE) %>%
as_tbl_graph()
g$labels <- labels
ggraph(g) +
geom_node_point(aes(color=as.factor(labels)), size = 10) +
geom_edge_loop(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
start_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_edge_link(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
start_cap = circle(10, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_node_label(aes(label = labels), repel = T) +
theme(legend.position = "none")
}
print_DTMC(P,labels)
getOption("bitmapType")
options(bitmapType="cairo")
print_DTMC(P,labels)
options(bitmapType="cairo")
print_DTMC(P,labels)
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
P <- matrix(
c(
0, 1, 0, 0,
0, 0.01, 0.01, 0.98,
1, 0, 0, 0,
0, 0, 0, 1
),
nrow=4, byrow=TRUE)
labels <- c("s0:{}", "s1:{try}", "s2:{fail}", "s3:{succ}")
print_DTMC <- function(P, labels){
g <- graph_from_adjacency_matrix(P, weighted = TRUE) %>%
as_tbl_graph()
g$labels <- labels
ggraph(g) +
geom_node_point(aes(color=as.factor(labels)), size = 10) +
geom_edge_loop(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
start_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_edge_link(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
start_cap = circle(10, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_node_label(aes(label = labels), repel = T) +
theme(legend.position = "none")
}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
P <- matrix(
c(
0, 1, 0, 0,
0, 0.01, 0.01, 0.98,
1, 0, 0, 0,
0, 0, 0, 1
),
nrow=4, byrow=TRUE)
labels <- c("s0:{}", "s1:{try}", "s2:{fail}", "s3:{succ}")
print_DTMC <- function(P, labels){
g <- graph_from_adjacency_matrix(P, weighted = TRUE) %>%
as_tbl_graph()
g$labels <- labels
ggraph(g) +
geom_node_point(aes(color=as.factor(labels)), size = 10) +
geom_edge_loop(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
start_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_edge_link(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
start_cap = circle(10, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_node_label(aes(label = labels), repel = T) +
theme(legend.position = "none")
}
print_DTMC(P,labels)
remove.packages("knitr")
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
remove.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(igraph)
library(ggraph)
library(dplyr)
library(ggplot2)
library(tidygraph)
library(ggrepel)
library(purrr)
P <- matrix(
c(
0, 1, 0, 0,
0, 0.01, 0.01, 0.98,
1, 0, 0, 0,
0, 0, 0, 1
),
nrow=4, byrow=TRUE)
labels <- c("s0:{}", "s1:{try}", "s2:{fail}", "s3:{succ}")
print_DTMC <- function(P, labels){
g <- graph_from_adjacency_matrix(P, weighted = TRUE) %>%
as_tbl_graph()
g$labels <- labels
ggraph(g) +
geom_node_point(aes(color=as.factor(labels)), size = 10) +
geom_edge_loop(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
start_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_edge_link(aes(alpha = log(E(g)$weight),
label = round(E(g)$weight, 3)),
end_cap = circle(10, 'mm'),
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
start_cap = circle(10, 'mm'),
repel = T, color="red", arrow = arrow(length = unit(4, 'mm'))) +
geom_node_label(aes(label = labels), repel = T) +
theme(legend.position = "none")
}
print_DTMC(P,labels)
remove.packages("ggraph")
install.packages("ggraph")
install.packages("ggraph")
remove.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
